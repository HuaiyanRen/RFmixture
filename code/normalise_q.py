

q1_r = [1.4242,1.3424,0.640121,1.82674,12.0262]
q1_f = [0.216535,0.354961,0.134831,0.293673]

q2_r = [0.740905,3.58201,0.736805,0.907049,4.84784]
q2_f = [0.230388,0.182555,0.448593,0.138464]

q3_r = [0.880124,4.48148,0.527233,1.24125,1.00011]
q3_f = [0.349383,0.26681,0.123233,0.260574]


r1_r = [1.35617,4.93179,0.96163,1.28342,1.44803]
r1_f = [0.276128,0.243538,0.254079,0.226256]

r2_r = [1.07214,31.4499,0.819383,1.03543,51.0513]
r2_f = [0.276128,0.243538,0.254079,0.226256]

r3_r = [1.26838,0.919132,0.70004,1.19463,5.28579]
r3_f = [0.276128,0.243538,0.254079,0.226256]


def normal_q(r,f):
    q= [[0,        r[0]*f[1],r[1]*f[2],r[2]*f[3]],
        [r[0]*f[0],0        ,r[3]*f[2],r[4]*f[3]],
        [r[1]*f[0],r[3]*f[1],0        ,1*f[3]],
        [r[2]*f[0],r[4]*f[1],1*f[2]   ,0]]

    q[0][0] = -sum(q[0])
    q[1][1] = -sum(q[1])
    q[2][2] = -sum(q[2])
    q[3][3] = -sum(q[3])

    dia_sum = - (f[0]*q[0][0] + f[1]*q[1][1] + f[2]*q[2][2] + f[3]*q[3][3])
    for i in range(4):
        for j in range(4):
            q[i][j] = q[i][j]/dia_sum
        
    return q

q1_q = normal_q(q1_r,q1_f)
print(q1_q)

r2_q = normal_q(r2_r,r2_f)
print(r2_q)
